data.frame(x = x, y = y) %>%
mutate(area = abs(x) > abs(qt(0.975, 28)))
t_density %>% Head
t_density %>% head
t_density <- density(t_df$t_stat, from = -5, to = 4) %$%
data.frame(x = x, y = y) %>%
mutate(area = abs(x) > abs(qt(0.975, 28)))
ggplot(data = t_density, aes(x = x, ymin = 0, ymax = y, fill = area)) +
geom_ribbon()
ggplot(data = t_density, aes(x = x, ymin = 0, ymax = y)) +
geom_ribbon()
ggplot(data = t_density, aes(x = x, ymin = 0, ymax = y)) +
geom_ribbon() +
theme_simple
ggplot(data = t_density, aes(x = x, ymin = 0, ymax = y)) +
geom_ribbon() +
geom_vline(xintercept = qt(c(0.025, 0.975), df = 28), color = red_pink) +
theme_simple
t_df$reject %>% mean
xaringan:::inf_mr()
xaringan:::inf_mr()
?sample()
n <- 1e2
set.seed(1234)
gen_df <- tibble(
x1 = runif(n = n, min = 0.5, max = 3.5),
x2 = sample(x = c(0,2), size = n, replace = T),
u  = rnorm(n = n, mean = 0, sd = 1)
)
n <- 1e2
set.seed(1234)
gen_df <- tibble(
x1 = runif(n = n, min = 0.5, max = 3.5),
x2 = sample(x = c(0,2), size = n, replace = T),
u  = rnorm(n = n, mean = 0, sd = 1),
y  = 1 + x1 + x2 + u
)
gen_df
?theme
xaringan:::inf_mr()
?scale_color_discrete()
?scale_color_manual()
ggplot(data = gen_df, aes(y = y, x = x1, color = x2)) +
geom_point(size = 3) +
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
theme_empty +
scale_color_manual(
TeX("x_2"),
labels = c("A", "B"),
values = c("darkslategrey", "grey85")
) +
theme(legend.position = "bottom")
?scale_shape_manual
gen_df %>% summary
gen_df %>% summary
ggplot(data = gen_df, aes(y = y, x = x1, color = x2, shape = x2)) +
geom_point(size = 3) +
# geom_hline(yintercept = 0) +
# geom_vline(xintercept = 0) +
ylim(c(-4, 8)) +
theme_axes +
scale_color_manual(
expression(x[2]),
values = c("darkslategrey", red_pink),
labels = c("A", "B")
) +
scale_shape_manual(
expression(x[2]),
values = c(1, 19),
labels = c("A", "B")
) +
theme(legend.position = "bottom")
theme_axes
add_axes <-
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0) +
add_axes <-
geom_hline(yintercept = 0) +
geom_vline(xintercept = 0)
?annotate
gen_df %>% summary
warngings()
warnings()
gen_df %>% group_by(x2) %>% summarize(mean(y))
gen_df %>% group_by(x2) %>% summarize(mean(y)) %>% unlist9)
gen_df %>% group_by(x2) %>% summarize(mean(y)) %>% unlist()
gen_df %>% group_by(x2) %>% summarize(mean(y)) %>% unlist() %>% extract(3:4)
mean_b
mean_a
mean_a <- filter(gen_df, x2 == F)$y %>% mean()
mean_b <- filter(gen_df, x2 == T)$y %>% mean()
mean_a
mean_b
mean_a <- filter(gen_df, x2 == F)$y %>% mean()
mean_b <- filter(gen_df, x2 == T)$y %>% mean()
gen_df %<>% mutate(y_dm = y - mean_a * (x2 == F) - mean_b * (x2 == T))
gen_df
warnings()
set.seed(1234)
y <- rnorm(1e3)
x <- matrix(data = rnorm(1e6), nrow = 1e3))
x <- matrix(data = rnorm(1e6), nrow = 1e3)
x %>% head
x %>% dim
set.seed(1234)
y <- rnorm(1e4)
x <- matrix(data = rnorm(1e7), nrow = 1e4)
x %<>% cbind(1, x)
set.seed(1234)
y <- rnorm(1e4)
x <- matrix(data = rnorm(1e7), nrow = 1e4)
x %<>% cbind(matrix(data = 1, nrow = 1e4, ncol = 1), x)
lm(y ~ x[,1:3])
lm(y ~ x[,1:3]) %>% summary
lm(y ~ x[,1:3]) %>% summary %>% names
lm(y ~ x[,1:3]) %>% summary %$% r.squared
lappy(1:10, data.frame(x = 1, y = 2))
lalppy(1:10, data.frame(x = 1, y = 2))
lapply(1:10, data.frame(x = 1, y = 2))
lapply(1:10, function (x) data.frame(x = 1, y = 2))
lapply(1:10, function (x) data.frame(x = 1, y = 2)) %>% bind_rows
r_df <- mclapply(X = 1:1e3, mc.cores = 4, FUN = function(x) {
tmp_reg <- lm(y ~ x[,1:3]) %>% summary()
data.frame(
k = x + 1,
r2 = tmp_reg %$% r.squared,
r2_adj = tmp_reg %$% adj.r.squared
)
})
y <- rnorm(1e4)
x <- matrix(data = rnorm(1e7), nrow = 1e4)
x %<>% cbind(matrix(data = 1, nrow = 1e4, ncol = 1), x)
y
warnings()
set.seed(1234)
y <- rnorm(1e4)
x <- matrix(data = rnorm(1e7), nrow = 1e4)
x %<>% cbind(matrix(data = 1, nrow = 1e4, ncol = 1), x)
xaringan:::inf_mr()
xaringan:::inf_mr()
warnings()
library(pacman)
p_load(dplyr, ggplot2, viridis)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
tibble(
e = rnorm(n),
c = c(0,1),
τ = rnorm(n, mean = 1, sd = 0.5),
y0 = e + rnorm(n, mean = c),
y1 = e + rnorm(n, mean = c) + c * τ
)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
y0 = e + rnorm(n, mean = c),
y1 = e + rnorm(n, mean = c) + c * τ
)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
y0 = e + rnorm(n, mean = c),
y1 = e + rnorm(n, mean = c) + τ
)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = c)
y0 = e + u,
y1 = e + u + τ
)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = c),
y0 = e + u,
y1 = e + u + τ
)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
pop_df <- tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = c),
y0 = e + u,
y1 = e + u + τ
)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
pop_df <- tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = c),
y0 = e + u,
y1 = e + u + τ
)
gg_df <- tibble(
i = rep(1:1e3, 2),
c = rep(pop_df$c, 2),
y = c(pop_df$y0, pop_df$y1),
outcome = rep(c(0,1), each = n)
)
gg_df
pop_df %>% mutate(test = interaction(c, outcome))
gg_df %>% mutate(test = interaction(c, outcome))
gg_df %>% mutate(test = interaction(c, outcome)) %>% summary
gg_df %>% mutate(test = interaction(c, outcome)) %$%test
library(pacman)
p_load(dplyr, ggplot2, viridis, magrittr)
gg_df %>% mutate(test = interaction(c, outcome)) %$%test
gg_df %>% mutate(test = interaction(c, outcome)) %$%test %>% class
library(pacman)
p_load(dplyr, ggplot2, ggthemes, viridis, magrittr)
# Plot
ggplot(
data = pop_df,
aes(x = interaction(c,outcome), y = y)
) +
geom_point() +
theme_pander()
# Plot
ggplot(
data = gg_df,
aes(x = interaction(c,outcome), y = y)
) +
geom_point() +
theme_pander()
# Plot
ggplot(
data = gg_df,
aes(x = interaction(c,outcome), y = y)
) +
geom_jitter() +
theme_pander()
# Plot
ggplot(
data = gg_df,
aes(x = interaction(outcome, c), y = y)
) +
geom_jitter() +
theme_pander()
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
pop_df <- tibble(
e = rnorm(n),
c = rep(c(0,2), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = c),
y0 = e + u,
y1 = e + u + τ
)
gg_df <- tibble(
i = rep(1:1e3, 2),
c = rep(pop_df$c, 2),
y = c(pop_df$y0, pop_df$y1),
outcome = rep(c(0,1), each = n)
)
# Plot
ggplot(
data = gg_df,
aes(x = interaction(outcome, c), y = y)
) +
geom_jitter() +
theme_pander()
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
pop_df <- tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = 2 * c),
y0 = e + u,
y1 = e + u + τ
)
gg_df <- tibble(
i = rep(1:1e3, 2),
c = rep(pop_df$c, 2),
y = c(pop_df$y0, pop_df$y1),
outcome = rep(c(0,1), each = n)
)
# Plot
ggplot(
data = gg_df,
aes(x = interaction(outcome, c), y = y)
) +
geom_jitter() +
theme_pander()
# Plot
ggplot(
data = gg_df,
aes(x = c, y = y)
) +
geom_jitter() +
theme_pander() +
facet_gride(. ~ outcome)
# Plot
ggplot(
data = gg_df,
aes(x = c, y = y)
) +
geom_jitter() +
theme_pander() +
facet_grid(. ~ outcome)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
pop_df <- tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = 2 * c),
y0 = e + u,
y1 = e + u + τ
)
gg_df <- tibble(
i = rep(1:1e3, 2),
c = rep(pop_df$c, 2),
y = c(pop_df$y0, pop_df$y1),
outcome = rep(factor(c(0,1), levels = c("y[0]", "y[1]")), each = n)
)
# Plot
ggplot(
data = gg_df,
aes(x = c, y = y)
) +
geom_jitter() +
theme_pander() +
facet_grid(. ~ outcome)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
pop_df <- tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = 2 * c),
y0 = e + u,
y1 = e + u + τ
)
gg_df <- tibble(
i = rep(1:1e3, 2),
c = rep(pop_df$c, 2),
y = c(pop_df$y0, pop_df$y1),
outcome = rep(factor(c(0,1), levels = c("y0", "y1")), each = n)
)
# Plot
ggplot(
data = gg_df,
aes(x = c, y = y)
) +
geom_jitter() +
theme_pander() +
facet_grid(. ~ outcome)
rep(factor(c(0,1), levels = c("y0", "y1")), each = n)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
pop_df <- tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = 2 * c),
y0 = e + u,
y1 = e + u + τ
)
gg_df <- tibble(
i = rep(1:1e3, 2),
c = rep(pop_df$c, 2),
y = c(pop_df$y0, pop_df$y1),
outcome = rep(c(0,1), each = n) %>% factor(levels = c("y0", "y1")
)
# Plot
ggplot(
data = gg_df,
aes(x = c, y = y)
) +
geom_jitter() +
theme_pander() +
facet_grid(. ~ outcome)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
pop_df <- tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = 2 * c),
y0 = e + u,
y1 = e + u + τ
)
gg_df <- tibble(
i = rep(1:1e3, 2),
c = rep(pop_df$c, 2),
y = c(pop_df$y0, pop_df$y1),
outcome = rep(c(0,1), each = n) %>% factor(levels = c("y0", "y1"))
)
# Plot
ggplot(
data = gg_df,
aes(x = c, y = y)
) +
geom_jitter() +
theme_pander() +
facet_grid(. ~ outcome)
rep(c(0,1), each = n)
rep(c(0,1), each = n) %>% factor(levels = c("y0", "y1"))
rep(c(0,1), each = n)
rep(c(0,1), each = n) %>% as.factor(levels = c("y0", "y1"))
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
pop_df <- tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = 2 * c),
y0 = e + u,
y1 = e + u + τ
)
gg_df <- tibble(
i = rep(1:1e3, 2),
c = rep(pop_df$c, 2),
y = c(pop_df$y0, pop_df$y1),
outcome = rep(c("y0", "y1"), each = n)
)
# Plot
ggplot(
data = gg_df,
aes(x = c, y = y)
) +
geom_jitter() +
theme_pander() +
facet_grid(. ~ outcome)
# Set seed
set.seed(123)
# Sample size
n <- 1e3
# Generate data
pop_df <- tibble(
e = rnorm(n),
c = rep(c(0,1), n/2),
τ = rnorm(n, mean = 1, sd = 0.5),
u = rnorm(n, mean = 2 * c),
y0 = e + u,
y1 = e + u + τ
)
gg_df <- tibble(
i = rep(1:1e3, 2),
c = rep(pop_df$c, 2),
y = c(pop_df$y0, pop_df$y1),
outcome = rep(c("y[0]", "y[1]"), each = n)
)
# Plot
ggplot(
data = gg_df,
aes(x = c, y = y)
) +
geom_jitter() +
theme_pander() +
facet_grid(. ~ outcome)
