) +
geom_path(
) +
scale_x_continuous(
TeX("(Estimated) PM$_{2.5}$ Level $\\left(\\mu g/m^3\\right)$"),
breaks = c(seq(0, 30, 5), 12.5)
) +
scale_y_continuous(
TeX("Share of U.S. Population"),
limits = c(0, 1)
) +
ggtitle(
TeX("Share of US Population Living at or Above PM$_{2.5}$ Levels"),
subtitle = TeX(paste0(
i, ", ",
str_replace_all(source, "et al.", "\\\\textit{et al.}")
))
) +
theme_pander(
base_size = 13,
base_family = "Roboto"
) +
theme(
panel.grid.minor = element_blank(),
legend.position = "bottom"
) +
scale_color_manual(
"County Status:",
values = magma(10)[c(4, 7)]
) +
scale_fill_manual(
"County Status:",
values = magma(10)[c(4, 7)]
)
# Save it
ggsave(
plot = gg_tmp,
path = dir_figures %>% paste0("Graphs/ExposureCDFs/AttainmentStatus/"),
filename = filename,
height = 7.5,
width = 12,
NULL
)
}
# Figure: CDF of population exposure by attainment, year, dataset ------------------------
# Set year
i <- 2005
# source <- "Di et al."
# source <- "van Donkelaar et al."
for (source in c("Di et al.", "van Donkelaar et al.")) {
# Create filename
if (str_detect(source, "van")) filename <- paste0("cdf_att_vd_", i, ".png")
if (str_detect(source, "Di")) filename <- paste0("cdf_att_di_", i, ".png")
# Plot the CDF for a given year
gg_tmp <- ggplot(
data = cdf_att_wide[year == i & dataset == source],
aes(x = pm_level, y = share, color = status)
) +
geom_hline(
yintercept = 0,
color = "grey70"
) +
geom_vline(
xintercept = 0,
color = "grey70"
) +
geom_ribbon(
aes(ymin = share_lb, ymax = share_ub, fill = status),
color = NA,
alpha = 0.4
) +
geom_path(
) +
scale_x_continuous(
TeX("(Estimated) PM$_{2.5}$ Level $\\left(\\mu g/m^3\\right)$"),
breaks = c(seq(0, 30, 5), 12.5)
) +
scale_y_continuous(
TeX("Share of U.S. Population"),
limits = c(0, 1)
) +
ggtitle(
TeX("Share of US Population Living at or Above PM$_{2.5}$ Levels"),
subtitle = TeX(paste0(
i, ", ",
str_replace_all(source, "et al.", "\\\\textit{et al.}")
))
) +
theme_pander(
base_size = 13,
base_family = "Roboto"
) +
theme(
panel.grid.minor = element_blank(),
legend.position = "bottom"
) +
scale_color_manual(
"County Status:",
values = magma(10)[c(7, 1)]
) +
scale_fill_manual(
"County Status:",
values = magma(10)[c(7, 1)]
)
# Save it
ggsave(
plot = gg_tmp,
path = dir_figures %>% paste0("Graphs/ExposureCDFs/AttainmentStatus/"),
filename = filename,
height = 7.5,
width = 12,
NULL
)
}
# Figure: CDF of population exposure by attainment, year, dataset ------------------------
# Set year
i <- 2005
# source <- "Di et al."
# source <- "van Donkelaar et al."
for (source in c("Di et al.", "van Donkelaar et al.")) {
# Create filename
if (str_detect(source, "van")) filename <- paste0("cdf_att_vd_", i, ".png")
if (str_detect(source, "Di")) filename <- paste0("cdf_att_di_", i, ".png")
# Plot the CDF for a given year
gg_tmp <- ggplot(
data = cdf_att_wide[year == i & dataset == source],
aes(x = pm_level, y = share, color = status)
) +
geom_hline(
yintercept = 0,
color = "grey70"
) +
geom_vline(
xintercept = 0,
color = "grey70"
) +
geom_ribbon(
aes(ymin = share_lb, ymax = share_ub, fill = status),
color = NA,
alpha = 0.4
) +
geom_path(
) +
scale_x_continuous(
TeX("(Estimated) PM$_{2.5}$ Level $\\left(\\mu g/m^3\\right)$"),
breaks = c(seq(0, 30, 5), 12.5)
) +
scale_y_continuous(
TeX("Share of U.S. Population"),
limits = c(0, 1)
) +
ggtitle(
TeX("Share of US Population Living at or Above PM$_{2.5}$ Levels"),
subtitle = TeX(paste0(
i, ", ",
str_replace_all(source, "et al.", "\\\\textit{et al.}")
))
) +
theme_pander(
base_size = 13,
base_family = "Roboto"
) +
theme(
panel.grid.minor = element_blank(),
legend.position = "bottom"
) +
scale_color_manual(
TeX("County PM$_{2.5}$ Status:"),
values = magma(10)[c(7, 1)]
) +
scale_fill_manual(
TeX("County PM$_{2.5}$ Status:"),
values = magma(10)[c(7, 1)]
)
# Save it
ggsave(
plot = gg_tmp,
path = dir_figures %>% paste0("Graphs/ExposureCDFs/AttainmentStatus/"),
filename = filename,
height = 7.5,
width = 12,
NULL
)
}
# Figure: CDF of population exposure by attainment, year, dataset ------------------------
# Set year
i <- 2005
# source <- "Di et al."
# source <- "van Donkelaar et al."
for (source in c("Di et al.", "van Donkelaar et al.")) {
# Create filename
if (str_detect(source, "van")) filename <- paste0("cdf_att_vd_", i, ".png")
if (str_detect(source, "Di")) filename <- paste0("cdf_att_di_", i, ".png")
# Plot the CDF for a given year
gg_tmp <- ggplot(
data = cdf_att_wide[year == i & dataset == source],
aes(x = pm_level, y = share, color = status)
) +
geom_hline(
yintercept = 0,
color = "grey70"
) +
geom_vline(
xintercept = 0,
color = "grey70"
) +
geom_ribbon(
aes(ymin = share_lb, ymax = share_ub, fill = status),
color = NA,
alpha = 0.4
) +
geom_path(
) +
scale_x_continuous(
TeX("(Estimated) PM$_{2.5}$ Level $\\left(\\mu g/m^3\\right)$"),
breaks = c(seq(0, 30, 5), 12.5)
) +
scale_y_continuous(
TeX("Share of U.S. Population"),
limits = c(0, 1)
) +
ggtitle(
TeX("Share of US Population Living at or Above PM$_{2.5}$ Levels"),
subtitle = TeX(paste0(
i, ", ",
str_replace_all(source, "et al.", "\\\\textit{et al.}")
))
) +
theme_pander(
base_size = 13,
base_family = "Roboto"
) +
theme(
panel.grid.minor = element_blank(),
legend.position = "bottom"
) +
scale_color_manual(
TeX("County PM$_{2.5}$ Status:"),
values = magma(10)[c(7, 1)]
) +
scale_fill_manual(
TeX("County PM$_{2.5}$ Status:"),
values = magma(10)[c(7, 1)]
)
# Save it
ggsave(
plot = gg_tmp,
path = dir_figures %>% paste0("Graphs/ExposureCDFs/AttainmentStatus/"),
filename = filename,
height = 7.5,
width = 12,
NULL
)
}
# Figure: CDF of population exposure by attainment, year, dataset ------------------------
# Set year
i <- 2005
# source <- "Di et al."
# source <- "van Donkelaar et al."
for (source in c("Di et al.", "van Donkelaar et al.")) {
# Create filename
if (str_detect(source, "van")) filename <- paste0("cdf_att_vd_", i, ".png")
if (str_detect(source, "Di")) filename <- paste0("cdf_att_di_", i, ".png")
# Plot the CDF for a given year
gg_tmp <- ggplot(
data = cdf_att_wide[year == i & dataset == source],
aes(x = pm_level, y = share, color = status)
) +
geom_hline(
yintercept = 0,
color = "grey70"
) +
geom_vline(
xintercept = 0,
color = "grey70"
) +
geom_ribbon(
aes(ymin = share_lb, ymax = share_ub, fill = status),
color = NA,
alpha = 0.4
) +
geom_path(
) +
scale_x_continuous(
TeX("(Estimated) PM$_{2.5}$ Level $\\left(\\mu g/m^3\\right)$"),
breaks = c(seq(0, 30, 5), 12.5)
) +
scale_y_continuous(
TeX("Share of U.S. Population"),
limits = c(0, 1)
) +
ggtitle(
TeX("Share of US Population Living at or Above PM$_{2.5}$ Levels"),
subtitle = TeX(paste0(
i, ", ",
str_replace_all(source, "et al.", "\\\\textit{et al.}")
))
) +
theme_pander(
base_size = 13,
base_family = "Roboto"
) +
theme(
panel.grid.minor = element_blank(),
legend.position = "bottom"
) +
scale_color_manual(
"County NAAQS Status:",
values = magma(10)[c(7, 1)]
) +
scale_fill_manual(
"County NAAQS Status:",
values = magma(10)[c(7, 1)]
)
# Save it
ggsave(
plot = gg_tmp,
path = dir_figures %>% paste0("Graphs/ExposureCDFs/AttainmentStatus/"),
filename = filename,
height = 7.5,
width = 12,
NULL
)
}
# Figure: CDF of population exposure by attainment, year, dataset ------------------------
# Set year
i <- 2003
# source <- "Di et al."
# source <- "van Donkelaar et al."
for (source in c("Di et al.", "van Donkelaar et al.")) {
# Create filename
if (str_detect(source, "van")) filename <- paste0("cdf_att_vd_", i, ".png")
if (str_detect(source, "Di")) filename <- paste0("cdf_att_di_", i, ".png")
# Plot the CDF for a given year
gg_tmp <- ggplot(
data = cdf_att_wide[year == i & dataset == source],
aes(x = pm_level, y = share, color = status)
) +
geom_hline(
yintercept = 0,
color = "grey70"
) +
geom_vline(
xintercept = 0,
color = "grey70"
) +
geom_ribbon(
aes(ymin = share_lb, ymax = share_ub, fill = status),
color = NA,
alpha = 0.4
) +
geom_path(
) +
scale_x_continuous(
TeX("(Estimated) PM$_{2.5}$ Level $\\left(\\mu g/m^3\\right)$"),
breaks = c(seq(0, 30, 5), 12.5)
) +
scale_y_continuous(
TeX("Share of U.S. Population"),
limits = c(0, 1)
) +
ggtitle(
TeX("Share of US Population Living at or Above PM$_{2.5}$ Levels"),
subtitle = TeX(paste0(
i, ", ",
str_replace_all(source, "et al.", "\\\\textit{et al.}")
))
) +
theme_pander(
base_size = 13,
base_family = "Roboto"
) +
theme(
panel.grid.minor = element_blank(),
legend.position = "bottom"
) +
scale_color_manual(
"County NAAQS Status:",
values = magma(10)[c(7, 1)]
) +
scale_fill_manual(
"County NAAQS Status:",
values = magma(10)[c(7, 1)]
)
# Save it
ggsave(
plot = gg_tmp,
path = dir_figures %>% paste0("Graphs/ExposureCDFs/AttainmentStatus/"),
filename = filename,
height = 7.5,
width = 12,
NULL
)
}
# Figure: CDF of population exposure by attainment, year, dataset ------------------------
# Set year
i <- 2007
# source <- "Di et al."
# source <- "van Donkelaar et al."
for (source in c("Di et al.", "van Donkelaar et al.")) {
# Create filename
if (str_detect(source, "van")) filename <- paste0("cdf_att_vd_", i, ".png")
if (str_detect(source, "Di")) filename <- paste0("cdf_att_di_", i, ".png")
# Plot the CDF for a given year
gg_tmp <- ggplot(
data = cdf_att_wide[year == i & dataset == source],
aes(x = pm_level, y = share, color = status)
) +
geom_hline(
yintercept = 0,
color = "grey70"
) +
geom_vline(
xintercept = 0,
color = "grey70"
) +
geom_ribbon(
aes(ymin = share_lb, ymax = share_ub, fill = status),
color = NA,
alpha = 0.4
) +
geom_path(
) +
scale_x_continuous(
TeX("(Estimated) PM$_{2.5}$ Level $\\left(\\mu g/m^3\\right)$"),
breaks = c(seq(0, 30, 5), 12.5)
) +
scale_y_continuous(
TeX("Share of U.S. Population"),
limits = c(0, 1)
) +
ggtitle(
TeX("Share of US Population Living at or Above PM$_{2.5}$ Levels"),
subtitle = TeX(paste0(
i, ", ",
str_replace_all(source, "et al.", "\\\\textit{et al.}")
))
) +
theme_pander(
base_size = 13,
base_family = "Roboto"
) +
theme(
panel.grid.minor = element_blank(),
legend.position = "bottom"
) +
scale_color_manual(
"County NAAQS Status:",
values = magma(10)[c(7, 1)]
) +
scale_fill_manual(
"County NAAQS Status:",
values = magma(10)[c(7, 1)]
)
# Save it
ggsave(
plot = gg_tmp,
path = dir_figures %>% paste0("Graphs/ExposureCDFs/AttainmentStatus/"),
filename = filename,
height = 7.5,
width = 12,
NULL
)
}
remotes::install_github('yihui/xaringan')
remotes::install_github('yihui/xaringan')
setwd("~/Dropbox/UO/Teaching/EC421W19/LectureNotes/01Review/")
dir()
rmarkdown::render("01_review.Rmd")
install.packages("gapminder")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
install.packages("gapminder")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
rmarkdown::render("01_review.Rmd")
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
cond_bad
cond_good
"test"
"7.8"
"7.8" %>% as.numeric()
